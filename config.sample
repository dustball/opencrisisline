<?php
# is INCLUDED in many (all?) of the OpenCrisisOnline pages
# opens databases as well as other functions
# defines db as the database handle

# Help line config
$anonymous = FALSE;                  #TODO:: Setting to FALSE will inform both caller and volunteer who they talked to
$help_line_number = "+16505551212";  #TODO:: Must include prefix of +1 followed by phone number, no spaces or other characters
$friendly_phone = "(650) 555-HELP";  #TODO:: Human friendly version of the above number
$system_name = "Our Help Line";      #TODO:: The name for your help line
$logo = "ocl-logo.png";              #TODO:: URL to logo (relative or absolute OK)
$volunteer = "volunteer";            #TODO:: What do you call volunteers?
$master_pass = "hunter2";            #TODO:: See documentation (this password may show up as *'s depending on your text editor)
$people_to_call = 6;                 #TODO:: How many people to call at once

# Admin config
$admin_email = "admin@email.com";    #TODO:: assign $admin_email the administrator's email address to be notified of runtime issues
$admin_phone = "650.555.1212";       #TODO:: assign $admin_phone the administrator's phone number that volunteers may contact for help (sms.php)
$admin_handle = "Admin";             #TODO:: assign $admin_handle the user name for the OpenCrisisLine administrator
$report_number = "";                 #TODO:: Optional - report all successful calls to this number, set to NULL to disable

# Twilio config
$ApiVersion = "2010-04-01";                          # Do not change
$AccountSid = "AC01234567890123456789012345678901";  #TODO:: ***NOT*** phone number, get from https://www.twilio.com/console
$AuthToken = "01234567890123456789012345678901";     #TODO:: Get from https://www.twilio.com/console

# Database config
$db_host = "dbhostname.sample.com";  #TODO:: localhost, IP address, fully qualified domain name
$db_name = "databasename";           #TODO:: name of the database containing volunteer phone numbers and handles, e.g., "ocl_db"
$db_user = "dbuser";                 #TODO:: an authorized user of the above $db_name database
$db_pass = "dbpass";                 #TODO:: the password for $db_user to access the $db_name database
$table_name = "opencrisisline";      #TODO:: table maintaining the volunteers' phone number, handle, and responsibilities
$db_charset = 'utf8mb4';             #don't change unless you have a reason to do so

# Additional menu items, comment out or set to NULL to disable them
$option2_column = "opt2";            #TODO:: column name for a second volunteer responsibility
$option2_friendly = "Code Red";      #TODO:: human friendly name for $option2_column that is used for volunteer responsibilities registration and in the caller's menu
$option3_column = "opt3";            #TODO:: the column name for a third volunteer responsibility
#TODO:: friendly name for $option3_column that is used for volunteer responsibilities registration and in the caller's menu
#TODO:: $option3_friendly must contain the word "Graveyard" for graveyard calling (call less people) to be enacted
$option3_friendly = "Graveyard / Night Shift";

# --------------------------------- no more editable entries -------------------------------

$warning_text = NULL;
$error_text = NULL;

function catText($text, $add){
    return $text.$add."\n";
}

if ("+16505551212" == $help_line_number)
    $error_text = catText($error_text, '$help_line_number needs to be replaced with phone number assigned by Twilio');
if ("(650) 555-HELP" == $friendly_phone)
    $error_text = catText($error_text, '$friendly_phone needs to be changed to a human friendly version of your Twilio assigned phone number');
if ("Our Help Line" == $system_name)
    $warning_text = catText($warning_text,'Consider naming your help line to something else other than "Our Help Line"');
if ("ocl-logo.png" == $logo)
    $warning_text = catText($warning_text, 'Consider using your own logo for the index.php page');
if ("hunter2" == $master_pass)
    $warning_text = catText($error_text, 'Replace $master_pass with another value than "hunter2"');
# no value test for people_to_call at this time

if ("admin@email.com" == $admin_email)
    $error_text = catText($error_text, "Replace $admin_email with the admininstrator's email address");
if ("650.555.1212" == $admin_phone)
    $error_text = catText($error_text, 'assign $admin_phone the administrator\'s phone number that volunteers may contact for help (sms.php)');
if ("Admin" == $admin_handle)
    $warning_text = catText($warning_text,'Consider using a \$admin_handle other than "Admin" for the OpenCrisisLine administrator');
# no value test for $report_number at this time

if ("dbhostname.sample.com" == $db_host)
    $error_text = catText($error_text, 'Change $db_host to localhost, IP address, or a fully qualified domain name');
if ("databasename" == $db_name)
    $warning_text = catText($warning_text, 'Consider changing $db_name to something other than');
if ("dbuser" == $db_user)
    $warning_text = catText($warning_text, 'Consider changing the name of the $db_user to something other than "dbuser"');
if ("dbpass" == $db_pass)
    $error_text = catText($error_text, 'Change the password to the database to something other than "dbpass"');
# no value test for $table_name at this time
# no value test for $db_charset at this time

if ($warning_text)
    echo "CAUTIONS:\n$warning_text\n\n";

if ($error_text){
    echo "FATAL ERRORS:\n$error_text\n\nAddress the above Fatal Errors and then run setup.php again from the command line\n\n";
    die();
}

require "twilio.php";

function logError($err) {
    global $system_name, $admin_email;
    mail($admin_email, 
        "[$system_name] Error", 
        "http://".$_SERVER["SERVER_NAME"].$_SERVER["REQUEST_URI"]. "\n\n". print_r($_REQUEST,true). "\n\n\n" .print_r($err,true));
}

function logAndDie($err) {
    logError($err."\n");
    die($err."\n");
}

function get_db() {
    global $db_host, $db_name, $db_charset;                             # sets up $dsn, assigned in "# Database config" above
    global $db_user, $db_pass;                                          # sets up $dbh, assigned in "# Database config" above
    $dsn = "mysql:host=$db_host;dbname=$db_name;charset=$db_charset";                                                   # dsn := data source name
    $options = [
        PDO::ATTR_ERRMODE            => PDO::ERRMODE_EXCEPTION,
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
        PDO::ATTR_EMULATE_PREPARES   => false,
    ];

    # try accessing the DBMS and then the database
    try {
        $dbh = new PDO($dsn, $db_user, $db_pass, $options);                                                             # dsn contains db_name. Replaces mysql_connect & mysql_select_db
        }
    catch (PDOException $e) {                                                                                           # Couldn't connect to DBMS or particular database
        logAndDie('Could not connect #C301: ->'. $e->getMessage(). '->' .$e->getCode());
        }

    # make PhpStorm happy that $pdo is always defined.
    if (!isset($dbh))
        $dbh = NULL;            # will never execute as if undefined, it is caught immediately above

    return $dbh;
}

$db = get_db();

function sms0($from,$to,$sms) {
    global $ApiVersion, $AccountSid, $AuthToken;
    
    $client = new TwilioRestClient($AccountSid, $AuthToken);
    $data = array(
        "From" => $from,
        "To" => $to,
        "Body" => $sms
    );

    try {
        $client->request("/$ApiVersion/Accounts/$AccountSid/SMS/Messages","POST",$data);
    }
    catch (TwilioException $e) {
        logAndDie('Twilio Exception #C302: '.$e->getMessage(). '->' .$e->getCode());
    }

    return;
}
